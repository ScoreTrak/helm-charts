apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "commercebackend.fullname" . }}
  labels:
    {{- include "commercebackend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "commercebackend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "commercebackend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "commercebackend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: change-cert-perms
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - "cp -L /cockroach-certs-readonly/* cockroach-certs/ && chown 1234:1234 /cockroach-certs/tls.key /cockroach-certs/tls.crt && chmod 0600 /cockroach-certs/tls.key /cockroach-certs/tls.crt"
          volumeMounts:
            - name: cockroachdb-client-secret
              mountPath: /cockroach-certs-readonly
            - name: client-certs
              mountPath: /cockroach-certs
        - name: start-db-migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/bash"
            - "-c"
            - "python manage.py migrate --noinput"
          envFrom:
            - secretRef:
                name: {{ include "commercebackend.fullname" . }}
                optional: false
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs

        - name: create-superuser
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          command:
            - "bash"
            - "-c"
            - "python manage.py ensure_adminuser && python manage.py collectstatic"
          envFrom:
            - secretRef:
                name: {{ include "commercebackend.fullname" . }}
                optional: false
            - secretRef:
                name: {{ include "commercebackend.fullname" . }}-django
                optional: false
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            -  /bin/bash
            - -c
            - sleep 20; daphne -b 0.0.0.0 -p {{ .Values.service.port }} ldfinance.asgi:application #For some reason sleeping is required, otherwise we get: Is the server running on host "scoretrak-cockroachdb-public" (10.233.16.67) and accepting TCP/IP connections on port 26257?
          envFrom:
            - secretRef:
                name: {{ include "commercebackend.fullname" . }}
                optional: false
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /admin
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /admin
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: client-certs
          emptyDir: {}
        - name: cockroachdb-client-secret
          secret:
            secretName: {{ include "global_db_client_secret_name" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
