{{ $bankAdminPassword := randAlphaNum 18 }}
  {{ $scoretrakAdminPassword := randAlphaNum 18 }}
  {{ $paymentAdminPassword := randAlphaNum 18 }}
kind: Secret
apiVersion: v1
metadata:
  name: {{ include "scoretrak.fullname" . }}
  labels:
  {{- include "scoretrak.labels" . | nindent 4 }}
data:
  {{ if .Release.IsInstall }}
  SCORETRAK_PASS: {{ $scoretrakAdminPassword | b64enc }}
  BANK_PASS: {{ $bankAdminPassword | b64enc }}
  PAYMENTS_PASS: {{ $paymentAdminPassword | b64enc }}
  {{ else }}
  SCORETRAK_PASS: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "SCORETRAK_PASS" }}
  BANK_PASS: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "BANK_PASS"  }}
  PAYMENTS_PASS: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "PAYMENTS_PASS"  }}
  {{ end }}
---


  {{ if not .Values.server.config.create }}
  {{ $jwtSecretScoreTrak := randAlphaNum 24 }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "call-nested" ( list . "server" "server.fullname" ) }}
  labels:
  {{ include "scoretrak.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ if .Values.server.config.nsq.use }}
    queue:
      use: nsq
      nsq:
    {{ $nsqdFullName := include "call-nested" ( list . "nsq" "nsq.nsqd.fullname" ) }}
        producernsqd: "{{ $nsqdFullName }}:4150"
        nsqlookupd:
          {{ $lookupdFullName := include "call-nested" ( list . "nsq" "nsq.nsqlookupd.fullname" ) }}
          {{ range $i, $e := until (atoi (printf "%d" (int64 .Values.nsq.nsqlookupd.replicaCount))) -}}
              - {{ $lookupdFullName }}-{{ $i }}.{{ $lookupdFullName }}:4161
          {{ end -}}
    {{ else }}
    queue:
      use: none
    {{ end }}

    adminusername: {{ .Values.server.config.admin.username }}
    {{ if .Release.IsInstall }}
    adminpassword: {{ $scoretrakAdminPassword }}
    {{ else }}
    adminpassword: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "SCORETRAK_PASS" | b64dec }}
    {{ end }}

    port: {{ .Values.server.service.port }}
    production: {{ .Values.server.config.production }}

    db:
      cockroach:
        host: {{ include "call-nested" ( list . "cockroachdb" "cockroachdb.fullname" ) }}-public
        port: {{ .Values.cockroachdb.service.ports.grpc.external.port }}
        database: {{ .Values.server.config.db.cockroachdb.database }}
    {{ if .Values.cockroachdb.tls.enabled }}
        clientca: "/cockroach-certs/ca.crt"
        clientsslkey: "/cockroach-certs/tls.key"
        clientsslcert: "/cockroach-certs/tls.crt"
    {{ else }}
        password: {{ .Values.server.config.db.cockroachdb.password }}
    {{ end }}

    platform:
      use: kubernetes

    jwt:
      secret: {{ $jwtSecretScoreTrak }}
    {{ end }}
---

  {{ if .Values.bank.enabled }}
  {{ if not .Values.payments.config.create }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-create-payments-user
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-15"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      initContainers:
        - name: wait-for-scoretrak
          image: "alpine"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - "for i in $(seq 1 200); do nc -z -w3 {{ include "call-nested" ( list . "server" "server.fullname" ) }} {{ .Values.server.service.port }} && exit 0 || sleep 3; done; exit 1"
      containers:
        - name: create-payments-user
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}" 
          command:
            - ./cli
            - create-super-user
            - --admin-name
            - {{ .Values.server.config.admin.username }}
            - --admin-password
            {{ if .Release.IsInstall }}
            - {{ $scoretrakAdminPassword }}
            {{ else }}
            - {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "SCORETRAK_PASS" | b64dec }}
            {{ end }}
            - --new-user-name
            - {{ .Values.payments.config.scoretrak.username }}
            - --new-user-password
            {{ if .Release.IsInstall }}
            - {{ $paymentAdminPassword }}
            {{ else }}
            - {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "PAYMENTS_PASS" | b64dec }}
            {{ end }}
            - --address
            - {{ include "call-nested" (list . "server" "server.fullname") }}:{{ .Values.server.service.port }}
      restartPolicy: Never
  backoffLimit: 10
  {{ end }}
---

{{ if not .Values.payments.config.create }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "call-nested" ( list . "payments" "payments.fullname" ) }}
  labels:
  {{- include "scoretrak.labels" . | nindent 4 }}
data:
  config.yaml: |
    bankusername: {{ .Values.commercebackend.config.admin.username }}
    scoretrakusername: {{ .Values.payments.config.scoretrak.username }}
    bankbaseurl: http://{{ include "call-nested" ( list . "commercebackend" "commercebackend.fullname" ) }}:{{ .Values.commercebackend.service.port }}
    scoretrakaddress: {{ include "call-nested" ( list . "server" "server.fullname" ) }}:{{ .Values.server.service.port }}
    {{ if .Release.IsInstall }}
    scoretrakpassword: {{ $paymentAdminPassword }}
    bankpassword: {{ $bankAdminPassword }}
    {{ else }}
    scoretrakpassword: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "PAYMENTS_PASS" | b64dec }}
    bankpassword: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "BANK_PASS" | b64dec }}
    {{ end }}
    bankamountperpoint: {{ .Values.payments.config.bank.amountPerPoint }}
    db:
      cockroach:
        host: {{ include "call-nested" ( list . "cockroachdb" "cockroachdb.fullname" ) }}-public
        clientca: "/cockroach-certs/ca.crt"
        clientsslkey: "/cockroach-certs/tls.key"
        clientsslcert: "/cockroach-certs/tls.crt"
        database: payments
  {{ end }}
        
---

{{ if not .Values.commercebackend.config.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "call-nested" ( list . "commercebackend" "commercebackend.fullname" ) }}-django
  labels:
  {{- include "commercebackend.labels" . | nindent 4 }}
type: Opaque
data:
  {{ if .Release.IsInstall }}
  DJANGO_SUPERUSER_PASSWORD: {{ $bankAdminPassword | b64enc }}
  {{ else }}
  DJANGO_SUPERUSER_PASSWORD: {{ index (lookup "v1" "Secret" .Release.Namespace ( include "scoretrak.fullname" . ) ).data "BANK_PASS"  }}
  {{ end }}
  DJANGO_SUPERUSER_USERNAME: {{ .Values.commercebackend.config.admin.username | b64enc }}

---
  {{ $jwtSecretBank := randAlphaNum 24 }}
kind: Secret
apiVersion: v1
metadata:
  name: {{ include "call-nested" ( list . "commercebackend" "commercebackend.fullname" ) }}
  labels:
  {{- include "commercebackend.labels" . | nindent 4 }}
data:
  {{ if .Values.commercebackend.config.cockroachdb.db_password }}
  DATABASE_URL: {{ printf "postgresql://%s:%s@%s-public:%d/%s?sslmode=require&sslcert=%s&sslkey=%s&sslrootcert=%s" .Values.commercebackend.config.cockroachdb.db_user .Values.commercebackend.config.cockroachdb.db_password (include "call-nested" ( list . "cockroachdb" "cockroachdb.fullname" )) (.Values.commercebackend.config.cockroachdb.db_port | int) .Values.commercebackend.config.cockroachdb.db_name .Values.commercebackend.config.cockroachdb.clientsslcert .Values.commercebackend.config.cockroachdb.clientsslkey .Values.commercebackend.config.cockroachdb.clientca | b64enc }}
  {{ else }}
  DATABASE_URL: {{ printf "postgresql://%s@%s-public:%d/%s?sslmode=require&sslcert=%s&sslkey=%s&sslrootcert=%s" .Values.commercebackend.config.cockroachdb.db_user (include "call-nested" ( list . "cockroachdb" "cockroachdb.fullname" )) (.Values.commercebackend.config.cockroachdb.db_port | int) .Values.commercebackend.config.cockroachdb.db_name .Values.commercebackend.config.cockroachdb.clientsslcert .Values.commercebackend.config.cockroachdb.clientsslkey .Values.commercebackend.config.cockroachdb.clientca | b64enc }}
  {{ end }}
  {{ if .Values.commercebackend.config.use_cockroachdb}}
  USE_COCKROACHDB: "{{ .Values.commercebackend.config.use_cockroachdb | toString | b64enc }}"
  {{ end }}
  SECRET_KEY: {{ $jwtSecretBank | b64enc }}
  DISCORD_WEBHOOK_URL: "{{ .Values.commercebackend.config.discord_webhook_url | b64enc }}"
  
  
{{ end }}

{{ end }}